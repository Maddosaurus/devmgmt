// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/

#ifndef __h_
#define __h_

#include <list>
#include <string>
#include <staff/common/DataObject.h>
#include <staff/common/WsdlTypes.h>
#include <staff/common/Attribute.h>
#include <staff/common/Optional.h>
#include <staff/common/QName.h>

// *interface.targetNamespace: http://schemas.xmlsoap.org/soap/envelope/

  struct Body;
  struct Envelope;
  struct Header;
  struct Fault;
  struct detail;


  // *restriction-list: xs:anyURI
  typedef std::string encodingStyle;  //!< 'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.

  struct Body
  {
    // *useParentElement: true
    std::list<staff::DataObject> tUnnamed0;
    staff::anyAttribute lsAnyAttributes;  //!< Prose in the spec does not specify that attributes are allowed on the Body element
  };

  struct Envelope
  {
    staff::Optional< ::Header > Header;
    ::Body Body;
    // *useParentElement: true
    std::list<staff::DataObject> tUnnamed0;
    staff::anyAttribute lsAnyAttributes;
  };

  struct Header
  {
    // *useParentElement: true
    std::list<staff::DataObject> tUnnamed0;
    staff::anyAttribute lsAnyAttributes;
  };

  //! Fault reporting structure
  struct Fault
  {
    staff::QName faultcode;
    std::string faultstring;
    staff::Optional<staff::anyURI> faultactor;
    staff::Optional< ::detail > detail;
  };

  struct detail
  {
    // *useParentElement: true
    std::list<staff::DataObject> tUnnamed0;
    staff::anyAttribute lsAnyAttributes;
  };


#endif // __h_

