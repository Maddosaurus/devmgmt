// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// DO NOT EDIT

#include <staff/utils/fromstring.h>
#include <staff/utils/tostring.h>
#include <staff/utils/HexBinary.h>
#include <staff/utils/Base64Binary.h>
#include <staff/common/DataObject.h>
#include <staff/common/Attribute.h>
#include "bfProxy.h"

namespace staff
{
///////////////////////////////////////////////////////////////////////////////////////////////////////
// enums

///////////////////////////////////////////////////////////////////////////////////////////////////////
// struct serializators/deserializators

DataObject& operator<<(DataObject& rdoParam, const struct ::BaseFaultType::ErrorCode& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://docs.oasis-open.org/wsrf/bf-2", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.SetAttributeFormDefaultQualified(false);
  rdoParam.SetValue(rstStruct.tParent);
  rdoParam.CreateAttribute("dialect", rstStruct.dialect);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::BaseFaultType::ErrorCode& rstStruct)
{
  rdoParam.GetValue(rstStruct.tParent);
  rdoParam.GetAttributeValueByName("dialect", rstStruct.dialect);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::BaseFaultType::FaultCause& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://docs.oasis-open.org/wsrf/bf-2", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.SetAttributeFormDefaultQualified(false);
  rdoParam.AppendChild(rstStruct.tUnnamed0);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::BaseFaultType::FaultCause& rstStruct)
{
  rstStruct.tUnnamed0 = rdoParam.FirstChild();
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::BaseFaultType& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://docs.oasis-open.org/wsrf/bf-2", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.SetAttributeFormDefaultQualified(false);
  for (std::list<staff::DataObject>::const_iterator itItem = (rstStruct.tUnnamed0).begin(), itItemEnd = (rstStruct.tUnnamed0).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("tUnnamed0").AppendChild((*itItem));
  }

  rdoParam.CreateChild("Timestamp", rstStruct.Timestamp);
  if (!(rstStruct.Originator).IsNull()) // Optional
  {
    staff::DataObject tdoParamOriginator = rdoParam.CreateChild("Originator");
    tdoParamOriginator << *rstStruct.Originator;
  }
  if (!(rstStruct.ErrorCode).IsNull()) // Optional
  {
    staff::DataObject tdoParamErrorCode = rdoParam.CreateChild("ErrorCode");
    tdoParamErrorCode << *rstStruct.ErrorCode;
  }
  for (std::list< ::Description >::const_iterator itItem = (rstStruct.Description).begin(), itItemEnd = (rstStruct.Description).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("Description");
    SerializeTypedef_Description(tdoParamItem, (*itItem));
  }

  if (!(rstStruct.FaultCause).IsNull()) // Optional
  {
    staff::DataObject tdoParamFaultCause = rdoParam.CreateChild("FaultCause");
    tdoParamFaultCause << *rstStruct.FaultCause;
  }
  for (anyAttribute::const_iterator itAttr = (rstStruct.lsAnyAttributes).begin(),
       itAttrEnd = (rstStruct.lsAnyAttributes).end(); itAttr != itAttrEnd; ++itAttr)
  {
    rdoParam.CreateChild("lsAnyAttributes").AppendAttribute(const_cast<Attribute&>(*itAttr));
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::BaseFaultType& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "tUnnamed0")
    {
      (rstStruct.tUnnamed0).push_back(tdoItem.FirstChild());
    }
  }

  rdoParam.GetChildValueByLocalName("Timestamp", rstStruct.Timestamp);
  const staff::DataObject& rdoParamOriginator = rdoParam.GetChildByLocalNameOpt("Originator");
  if (!rdoParamOriginator.IsNull()) // optional
  {
    rdoParamOriginator >> *rstStruct.Originator;
  }
  const staff::DataObject& rdoParamErrorCode = rdoParam.GetChildByLocalNameOpt("ErrorCode");
  if (!rdoParamErrorCode.IsNull()) // optional
  {
    rdoParamErrorCode >> *rstStruct.ErrorCode;
  }
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "Description")
    {
      (rstStruct.Description).resize((rstStruct.Description).size() + 1);
      DeserializeTypedef_Description(tdoItem, (rstStruct.Description).back());
    }
  }

  const staff::DataObject& rdoParamFaultCause = rdoParam.GetChildByLocalNameOpt("FaultCause");
  if (!rdoParamFaultCause.IsNull()) // optional
  {
    rdoParamFaultCause >> *rstStruct.FaultCause;
  }
  for (staff::DataObject::ConstAttributeIterator itAttr = (rdoParam).AttributeBegin(),
       itAttrEnd = (rdoParam).AttributeEnd(); itAttr != itAttrEnd; ++itAttr)
  {
    (rstStruct.lsAnyAttributes).push_back(*itAttr);
  }
  return rdoParam;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
// typedef serializators

DataObject& SerializeTypedef_Description(DataObject& rdoParam, const ::Description& rtType)
{
  rdoParam.SetValue(rtType);
  rdoParam.SetNamespaceUriGenPrefix("http://docs.oasis-open.org/wsrf/bf-2", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.SetAttributeFormDefaultQualified(false);
  return rdoParam;
}


///////////////////////////////////////////////////////////////////////////////////////////////////////
// typedef deserializators
const DataObject& DeserializeTypedef_Description(const DataObject& rdoParam, ::Description& rtType)
{
  rdoParam.GetValue(rtType);
  return rdoParam;
}

}


