// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// DO NOT EDIT

#ifndef _bProxy_h_
#define _bProxy_h_

#include "b.h"
#include "ws_addrProxy.h"
#include "bfProxy.h"
#include "tProxy.h"

namespace staff
{
  class DataObject;
  DataObject& operator<<(DataObject& rdoParam, const struct ::TopicExpressionType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::TopicExpressionType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::FilterType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::FilterType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::SubscriptionPolicyType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::SubscriptionPolicyType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::NotificationMessageHolderType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::NotificationMessageHolderType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::NotificationMessageHolderType::Message& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::NotificationMessageHolderType::Message& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::SubscribeCreationFailedFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::SubscribeCreationFailedFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::InvalidFilterFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::InvalidFilterFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::TopicExpressionDialectUnknownFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::TopicExpressionDialectUnknownFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::InvalidTopicExpressionFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::InvalidTopicExpressionFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::TopicNotSupportedFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::TopicNotSupportedFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::MultipleTopicsSpecifiedFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::MultipleTopicsSpecifiedFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::InvalidProducerPropertiesExpressionFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::InvalidProducerPropertiesExpressionFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::InvalidMessageContentExpressionFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::InvalidMessageContentExpressionFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UnrecognizedPolicyRequestFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UnrecognizedPolicyRequestFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UnsupportedPolicyRequestFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UnsupportedPolicyRequestFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::NotifyMessageNotSupportedFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::NotifyMessageNotSupportedFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UnacceptableInitialTerminationTimeFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UnacceptableInitialTerminationTimeFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::NoCurrentMessageOnTopicFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::NoCurrentMessageOnTopicFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UnableToGetMessagesFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UnableToGetMessagesFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UnableToDestroyPullPointFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UnableToDestroyPullPointFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UnableToCreatePullPointFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UnableToCreatePullPointFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UnacceptableTerminationTimeFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UnacceptableTerminationTimeFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UnableToDestroySubscriptionFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UnableToDestroySubscriptionFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::PauseFailedFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::PauseFailedFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::ResumeFailedFaultType& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::ResumeFailedFaultType& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::NotificationProducerRP& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::NotificationProducerRP& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::SubscriptionManagerRP& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::SubscriptionManagerRP& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::Notify& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::Notify& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UseRaw& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UseRaw& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::Subscribe& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::Subscribe& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::Subscribe::SubscriptionPolicy& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::Subscribe::SubscriptionPolicy& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::SubscribeResponse& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::SubscribeResponse& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::GetCurrentMessage& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCurrentMessage& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::GetCurrentMessageResponse& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCurrentMessageResponse& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::GetMessages& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::GetMessages& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::GetMessagesResponse& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::GetMessagesResponse& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::DestroyPullPoint& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::DestroyPullPoint& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::DestroyPullPointResponse& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::DestroyPullPointResponse& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::CreatePullPoint& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::CreatePullPoint& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::CreatePullPointResponse& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::CreatePullPointResponse& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::Renew& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::Renew& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::RenewResponse& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::RenewResponse& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::Unsubscribe& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::Unsubscribe& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::UnsubscribeResponse& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::UnsubscribeResponse& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::PauseSubscription& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::PauseSubscription& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::PauseSubscriptionResponse& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::PauseSubscriptionResponse& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::ResumeSubscription& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::ResumeSubscription& rstStruct);
  DataObject& operator<<(DataObject& rdoParam, const struct ::ResumeSubscriptionResponse& rstStruct);
  const DataObject& operator>>(const DataObject& rdoParam, struct ::ResumeSubscriptionResponse& rstStruct);
  DataObject& SerializeTypedef_AbsoluteOrRelativeTimeType(DataObject& rdoParam, const ::AbsoluteOrRelativeTimeType& rtType);
  const DataObject& DeserializeTypedef_AbsoluteOrRelativeTimeType(const DataObject& rdoParam, ::AbsoluteOrRelativeTimeType& rtType);
}

#endif

