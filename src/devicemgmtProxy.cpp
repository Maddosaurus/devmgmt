// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// DO NOT EDIT

#include <staff/utils/fromstring.h>
#include <staff/utils/tostring.h>
#include <staff/utils/HexBinary.h>
#include <staff/utils/Base64Binary.h>
#include <staff/common/DataObject.h>
#include <staff/common/Attribute.h>
#include "devicemgmtProxy.h"

namespace staff
{
///////////////////////////////////////////////////////////////////////////////////////////////////////
// enums

///////////////////////////////////////////////////////////////////////////////////////////////////////
// struct serializators/deserializators

DataObject& operator<<(DataObject& rdoParam, const struct ::Service& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("Namespace", rstStruct.Namespace);
  rdoParam.CreateChild("XAddr", rstStruct.XAddr);
  if (!(rstStruct.Capabilities).IsNull()) // Optional
  {
    staff::DataObject tdoParamCapabilities = rdoParam.CreateChild("Capabilities");
    tdoParamCapabilities << *rstStruct.Capabilities;
  }
  staff::DataObject tdoParamVersion = rdoParam.CreateChild("Version");
  tdoParamVersion << rstStruct.Version;
  for (std::list<staff::DataObject>::const_iterator itItem = (rstStruct.tUnnamed0).begin(), itItemEnd = (rstStruct.tUnnamed0).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("tUnnamed0").AppendChild((*itItem));
  }

  for (anyAttribute::const_iterator itAttr = (rstStruct.lsAnyAttributes).begin(),
       itAttrEnd = (rstStruct.lsAnyAttributes).end(); itAttr != itAttrEnd; ++itAttr)
  {
    rdoParam.CreateChild("lsAnyAttributes").AppendAttribute(const_cast<Attribute&>(*itAttr));
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::Service& rstStruct)
{
  rdoParam.GetChildValueByLocalName("Namespace", rstStruct.Namespace);
  rdoParam.GetChildValueByLocalName("XAddr", rstStruct.XAddr);
  const staff::DataObject& rdoParamCapabilities = rdoParam.GetChildByLocalNameOpt("Capabilities");
  if (!rdoParamCapabilities.IsNull()) // optional
  {
    rdoParamCapabilities >> *rstStruct.Capabilities;
  }
  rdoParam.GetChildByLocalName("Version") >> rstStruct.Version;
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "tUnnamed0")
    {
      (rstStruct.tUnnamed0).push_back(tdoItem.FirstChild());
    }
  }

  for (staff::DataObject::ConstAttributeIterator itAttr = (rdoParam).AttributeBegin(),
       itAttrEnd = (rdoParam).AttributeEnd(); itAttr != itAttrEnd; ++itAttr)
  {
    (rstStruct.lsAnyAttributes).push_back(*itAttr);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::DeviceServiceCapabilities& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamNetwork = rdoParam.CreateChild("Network");
  tdoParamNetwork << rstStruct.Network;
  staff::DataObject tdoParamSecurity = rdoParam.CreateChild("Security");
  tdoParamSecurity << rstStruct.Security;
  staff::DataObject tdoParamSystem = rdoParam.CreateChild("System");
  tdoParamSystem << rstStruct.System;
  if (!(rstStruct.Misc).IsNull()) // Optional
  {
    staff::DataObject tdoParamMisc = rdoParam.CreateChild("Misc");
    tdoParamMisc << *rstStruct.Misc;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::DeviceServiceCapabilities& rstStruct)
{
  rdoParam.GetChildByLocalName("Network") >> rstStruct.Network;
  rdoParam.GetChildByLocalName("Security") >> rstStruct.Security;
  rdoParam.GetChildByLocalName("System") >> rstStruct.System;
  const staff::DataObject& rdoParamMisc = rdoParam.GetChildByLocalNameOpt("Misc");
  if (!rdoParamMisc.IsNull()) // optional
  {
    rdoParamMisc >> *rstStruct.Misc;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::MiscCapabilities& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (anyAttribute::const_iterator itAttr = (rstStruct.lsAnyAttributes).begin(),
       itAttrEnd = (rstStruct.lsAnyAttributes).end(); itAttr != itAttrEnd; ++itAttr)
  {
    rdoParam.CreateChild("lsAnyAttributes").AppendAttribute(const_cast<Attribute&>(*itAttr));
  }
  if (!(rstStruct.AuxiliaryCommands).IsNull()) // Optional
  {
    rdoParam.CreateAttribute("AuxiliaryCommands", *rstStruct.AuxiliaryCommands);
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::MiscCapabilities& rstStruct)
{
  for (staff::DataObject::ConstAttributeIterator itAttr = (rdoParam).AttributeBegin(),
       itAttrEnd = (rdoParam).AttributeEnd(); itAttr != itAttrEnd; ++itAttr)
  {
    (rstStruct.lsAnyAttributes).push_back(*itAttr);
  }
  const staff::Attribute& rAttrAuxiliaryCommands = rdoParam.GetAttributeByLocalNameOpt("AuxiliaryCommands");
  if (!rAttrAuxiliaryCommands.IsNull()) // optional attribute
  {
    rAttrAuxiliaryCommands.GetValue(*rstStruct.AuxiliaryCommands);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetServices& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("IncludeCapability", rstStruct.IncludeCapability);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetServices& rstStruct)
{
  rdoParam.GetChildValueByLocalName("IncludeCapability", rstStruct.IncludeCapability);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetServicesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::Service >::const_iterator itItem = (rstStruct.Service).begin(), itItemEnd = (rstStruct.Service).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("Service");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetServicesResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "Service")
    {
      (rstStruct.Service).resize((rstStruct.Service).size() + 1);
      tdoItem >> (rstStruct.Service).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetServiceCapabilities& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetServiceCapabilities& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetServiceCapabilitiesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamCapabilities = rdoParam.CreateChild("Capabilities");
  tdoParamCapabilities << rstStruct.Capabilities;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetServiceCapabilitiesResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("Capabilities") >> rstStruct.Capabilities;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDeviceInformation& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDeviceInformation& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDeviceInformationResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("Manufacturer", rstStruct.Manufacturer);
  rdoParam.CreateChild("Model", rstStruct.Model);
  rdoParam.CreateChild("FirmwareVersion", rstStruct.FirmwareVersion);
  rdoParam.CreateChild("SerialNumber", rstStruct.SerialNumber);
  rdoParam.CreateChild("HardwareId", rstStruct.HardwareId);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDeviceInformationResponse& rstStruct)
{
  rdoParam.GetChildValueByLocalName("Manufacturer", rstStruct.Manufacturer);
  rdoParam.GetChildValueByLocalName("Model", rstStruct.Model);
  rdoParam.GetChildValueByLocalName("FirmwareVersion", rstStruct.FirmwareVersion);
  rdoParam.GetChildValueByLocalName("SerialNumber", rstStruct.SerialNumber);
  rdoParam.GetChildValueByLocalName("HardwareId", rstStruct.HardwareId);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetSystemDateAndTime& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamDateTimeType = rdoParam.CreateChild("DateTimeType");
  tdoParamDateTimeType << rstStruct.DateTimeType;
  rdoParam.CreateChild("DaylightSavings", rstStruct.DaylightSavings);
  if (!(rstStruct.TimeZone).IsNull()) // Optional
  {
    staff::DataObject tdoParamTimeZone = rdoParam.CreateChild("TimeZone");
    tdoParamTimeZone << *rstStruct.TimeZone;
  }
  if (!(rstStruct.UTCDateTime).IsNull()) // Optional
  {
    staff::DataObject tdoParamUTCDateTime = rdoParam.CreateChild("UTCDateTime");
    tdoParamUTCDateTime << *rstStruct.UTCDateTime;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetSystemDateAndTime& rstStruct)
{
  rdoParam.GetChildByLocalName("DateTimeType") >> rstStruct.DateTimeType;
  rdoParam.GetChildValueByLocalName("DaylightSavings", rstStruct.DaylightSavings);
  const staff::DataObject& rdoParamTimeZone = rdoParam.GetChildByLocalNameOpt("TimeZone");
  if (!rdoParamTimeZone.IsNull()) // optional
  {
    rdoParamTimeZone >> *rstStruct.TimeZone;
  }
  const staff::DataObject& rdoParamUTCDateTime = rdoParam.GetChildByLocalNameOpt("UTCDateTime");
  if (!rdoParamUTCDateTime.IsNull()) // optional
  {
    rdoParamUTCDateTime >> *rstStruct.UTCDateTime;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetSystemDateAndTimeResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetSystemDateAndTimeResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemDateAndTime& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemDateAndTime& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemDateAndTimeResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamSystemDateAndTime = rdoParam.CreateChild("SystemDateAndTime");
  tdoParamSystemDateAndTime << rstStruct.SystemDateAndTime;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemDateAndTimeResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("SystemDateAndTime") >> rstStruct.SystemDateAndTime;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetSystemFactoryDefault& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamFactoryDefault = rdoParam.CreateChild("FactoryDefault");
  tdoParamFactoryDefault << rstStruct.FactoryDefault;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetSystemFactoryDefault& rstStruct)
{
  rdoParam.GetChildByLocalName("FactoryDefault") >> rstStruct.FactoryDefault;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetSystemFactoryDefaultResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetSystemFactoryDefaultResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::UpgradeSystemFirmware& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamFirmware = rdoParam.CreateChild("Firmware");
  tdoParamFirmware << rstStruct.Firmware;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::UpgradeSystemFirmware& rstStruct)
{
  rdoParam.GetChildByLocalName("Firmware") >> rstStruct.Firmware;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::UpgradeSystemFirmwareResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  if (!(rstStruct.Message).IsNull()) // Optional
  {
    rdoParam.CreateChild("Message", *rstStruct.Message);
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::UpgradeSystemFirmwareResponse& rstStruct)
{
  const staff::DataObject& rdoParamMessage = rdoParam.GetChildByLocalNameOpt("Message");
  if (!rdoParamMessage.IsNull()) // optional
  {
    rdoParamMessage.GetValue(*rstStruct.Message);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SystemReboot& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SystemReboot& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SystemRebootResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("Message", rstStruct.Message);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SystemRebootResponse& rstStruct)
{
  rdoParam.GetChildValueByLocalName("Message", rstStruct.Message);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::RestoreSystem& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::BackupFile >::const_iterator itItem = (rstStruct.BackupFiles).begin(), itItemEnd = (rstStruct.BackupFiles).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("BackupFiles");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::RestoreSystem& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "BackupFiles")
    {
      (rstStruct.BackupFiles).resize((rstStruct.BackupFiles).size() + 1);
      tdoItem >> (rstStruct.BackupFiles).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::RestoreSystemResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::RestoreSystemResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemBackup& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemBackup& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemBackupResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::BackupFile >::const_iterator itItem = (rstStruct.BackupFiles).begin(), itItemEnd = (rstStruct.BackupFiles).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("BackupFiles");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemBackupResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "BackupFiles")
    {
      (rstStruct.BackupFiles).resize((rstStruct.BackupFiles).size() + 1);
      tdoItem >> (rstStruct.BackupFiles).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemSupportInformation& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemSupportInformation& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemSupportInformationResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamSupportInformation = rdoParam.CreateChild("SupportInformation");
  tdoParamSupportInformation << rstStruct.SupportInformation;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemSupportInformationResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("SupportInformation") >> rstStruct.SupportInformation;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemLog& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamLogType = rdoParam.CreateChild("LogType");
  tdoParamLogType << rstStruct.LogType;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemLog& rstStruct)
{
  rdoParam.GetChildByLocalName("LogType") >> rstStruct.LogType;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemLogResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamSystemLog = rdoParam.CreateChild("SystemLog");
  tdoParamSystemLog << rstStruct.SystemLog;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemLogResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("SystemLog") >> rstStruct.SystemLog;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetScopes& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetScopes& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetScopesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::Scope >::const_iterator itItem = (rstStruct.Scopes).begin(), itItemEnd = (rstStruct.Scopes).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("Scopes");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetScopesResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "Scopes")
    {
      (rstStruct.Scopes).resize((rstStruct.Scopes).size() + 1);
      tdoItem >> (rstStruct.Scopes).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetScopes& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list<staff::anyURI>::const_iterator itItem = (rstStruct.Scopes).begin(), itItemEnd = (rstStruct.Scopes).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("Scopes", (*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetScopes& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "Scopes")
    {
      (rstStruct.Scopes).push_back(tdoItem.GetText());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetScopesResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetScopesResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::AddScopes& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list<staff::anyURI>::const_iterator itItem = (rstStruct.ScopeItem).begin(), itItemEnd = (rstStruct.ScopeItem).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("ScopeItem", (*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::AddScopes& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ScopeItem")
    {
      (rstStruct.ScopeItem).push_back(tdoItem.GetText());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::AddScopesResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::AddScopesResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::RemoveScopes& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list<staff::anyURI>::const_iterator itItem = (rstStruct.ScopeItem).begin(), itItemEnd = (rstStruct.ScopeItem).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("ScopeItem", (*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::RemoveScopes& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ScopeItem")
    {
      (rstStruct.ScopeItem).push_back(tdoItem.GetText());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::RemoveScopesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list<staff::anyURI>::const_iterator itItem = (rstStruct.ScopeItem).begin(), itItemEnd = (rstStruct.ScopeItem).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("ScopeItem", (*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::RemoveScopesResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ScopeItem")
    {
      (rstStruct.ScopeItem).push_back(tdoItem.GetText());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDiscoveryMode& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDiscoveryMode& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDiscoveryModeResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamDiscoveryMode = rdoParam.CreateChild("DiscoveryMode");
  tdoParamDiscoveryMode << rstStruct.DiscoveryMode;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDiscoveryModeResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("DiscoveryMode") >> rstStruct.DiscoveryMode;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDiscoveryMode& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamDiscoveryMode = rdoParam.CreateChild("DiscoveryMode");
  tdoParamDiscoveryMode << rstStruct.DiscoveryMode;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDiscoveryMode& rstStruct)
{
  rdoParam.GetChildByLocalName("DiscoveryMode") >> rstStruct.DiscoveryMode;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDiscoveryModeResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDiscoveryModeResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetRemoteDiscoveryMode& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetRemoteDiscoveryMode& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetRemoteDiscoveryModeResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamRemoteDiscoveryMode = rdoParam.CreateChild("RemoteDiscoveryMode");
  tdoParamRemoteDiscoveryMode << rstStruct.RemoteDiscoveryMode;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetRemoteDiscoveryModeResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("RemoteDiscoveryMode") >> rstStruct.RemoteDiscoveryMode;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetRemoteDiscoveryMode& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamRemoteDiscoveryMode = rdoParam.CreateChild("RemoteDiscoveryMode");
  tdoParamRemoteDiscoveryMode << rstStruct.RemoteDiscoveryMode;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetRemoteDiscoveryMode& rstStruct)
{
  rdoParam.GetChildByLocalName("RemoteDiscoveryMode") >> rstStruct.RemoteDiscoveryMode;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetRemoteDiscoveryModeResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetRemoteDiscoveryModeResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDPAddresses& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDPAddresses& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDPAddressesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::NetworkHost >::const_iterator itItem = (rstStruct.DPAddress).begin(), itItemEnd = (rstStruct.DPAddress).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("DPAddress");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDPAddressesResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "DPAddress")
    {
      (rstStruct.DPAddress).resize((rstStruct.DPAddress).size() + 1);
      tdoItem >> (rstStruct.DPAddress).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDPAddresses& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::NetworkHost >::const_iterator itItem = (rstStruct.DPAddress).begin(), itItemEnd = (rstStruct.DPAddress).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("DPAddress");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDPAddresses& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "DPAddress")
    {
      (rstStruct.DPAddress).resize((rstStruct.DPAddress).size() + 1);
      tdoItem >> (rstStruct.DPAddress).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDPAddressesResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDPAddressesResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetEndpointReference& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetEndpointReference& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetEndpointReferenceResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("GUID", rstStruct.GUID);
  for (std::list<staff::DataObject>::const_iterator itItem = (rstStruct.tUnnamed0).begin(), itItemEnd = (rstStruct.tUnnamed0).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("tUnnamed0").AppendChild((*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetEndpointReferenceResponse& rstStruct)
{
  rdoParam.GetChildValueByLocalName("GUID", rstStruct.GUID);
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "tUnnamed0")
    {
      (rstStruct.tUnnamed0).push_back(tdoItem.FirstChild());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetRemoteUser& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetRemoteUser& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetRemoteUserResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  if (!(rstStruct.RemoteUser).IsNull()) // Optional
  {
    staff::DataObject tdoParamRemoteUser = rdoParam.CreateChild("RemoteUser");
    tdoParamRemoteUser << *rstStruct.RemoteUser;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetRemoteUserResponse& rstStruct)
{
  const staff::DataObject& rdoParamRemoteUser = rdoParam.GetChildByLocalNameOpt("RemoteUser");
  if (!rdoParamRemoteUser.IsNull()) // optional
  {
    rdoParamRemoteUser >> *rstStruct.RemoteUser;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetRemoteUser& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  if (!(rstStruct.RemoteUser).IsNull()) // Optional
  {
    staff::DataObject tdoParamRemoteUser = rdoParam.CreateChild("RemoteUser");
    tdoParamRemoteUser << *rstStruct.RemoteUser;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetRemoteUser& rstStruct)
{
  const staff::DataObject& rdoParamRemoteUser = rdoParam.GetChildByLocalNameOpt("RemoteUser");
  if (!rdoParamRemoteUser.IsNull()) // optional
  {
    rdoParamRemoteUser >> *rstStruct.RemoteUser;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetRemoteUserResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetRemoteUserResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetUsers& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetUsers& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetUsersResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::User >::const_iterator itItem = (rstStruct.User).begin(), itItemEnd = (rstStruct.User).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("User");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetUsersResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "User")
    {
      (rstStruct.User).resize((rstStruct.User).size() + 1);
      tdoItem >> (rstStruct.User).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::CreateUsers& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::User >::const_iterator itItem = (rstStruct.User).begin(), itItemEnd = (rstStruct.User).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("User");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::CreateUsers& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "User")
    {
      (rstStruct.User).resize((rstStruct.User).size() + 1);
      tdoItem >> (rstStruct.User).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::CreateUsersResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::CreateUsersResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::DeleteUsers& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list<std::string>::const_iterator itItem = (rstStruct.Username).begin(), itItemEnd = (rstStruct.Username).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("Username", (*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::DeleteUsers& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "Username")
    {
      (rstStruct.Username).push_back(tdoItem.GetText());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::DeleteUsersResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::DeleteUsersResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetUser& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::User >::const_iterator itItem = (rstStruct.User).begin(), itItemEnd = (rstStruct.User).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("User");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetUser& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "User")
    {
      (rstStruct.User).resize((rstStruct.User).size() + 1);
      tdoItem >> (rstStruct.User).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetUserResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetUserResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetWsdlUrl& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetWsdlUrl& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetWsdlUrlResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("WsdlUrl", rstStruct.WsdlUrl);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetWsdlUrlResponse& rstStruct)
{
  rdoParam.GetChildValueByLocalName("WsdlUrl", rstStruct.WsdlUrl);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCapabilities& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::CapabilityCategory >::const_iterator itItem = (rstStruct.Category).begin(), itItemEnd = (rstStruct.Category).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("Category");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCapabilities& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "Category")
    {
      ::CapabilityCategory tItem;
      tdoItem >> tItem;
      (rstStruct.Category).push_back(tItem);
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCapabilitiesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamCapabilities = rdoParam.CreateChild("Capabilities");
  tdoParamCapabilities << rstStruct.Capabilities;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCapabilitiesResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("Capabilities") >> rstStruct.Capabilities;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetHostname& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetHostname& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetHostnameResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamHostnameInformation = rdoParam.CreateChild("HostnameInformation");
  tdoParamHostnameInformation << rstStruct.HostnameInformation;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetHostnameResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("HostnameInformation") >> rstStruct.HostnameInformation;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetHostname& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("Name", rstStruct.Name);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetHostname& rstStruct)
{
  rdoParam.GetChildValueByLocalName("Name", rstStruct.Name);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetHostnameResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetHostnameResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetHostnameFromDHCP& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("FromDHCP", rstStruct.FromDHCP);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetHostnameFromDHCP& rstStruct)
{
  rdoParam.GetChildValueByLocalName("FromDHCP", rstStruct.FromDHCP);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetHostnameFromDHCPResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("RebootNeeded", rstStruct.RebootNeeded);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetHostnameFromDHCPResponse& rstStruct)
{
  rdoParam.GetChildValueByLocalName("RebootNeeded", rstStruct.RebootNeeded);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDNS& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDNS& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDNSResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamDNSInformation = rdoParam.CreateChild("DNSInformation");
  tdoParamDNSInformation << rstStruct.DNSInformation;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDNSResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("DNSInformation") >> rstStruct.DNSInformation;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDNS& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("FromDHCP", rstStruct.FromDHCP);
  for (std::list<staff::token>::const_iterator itItem = (rstStruct.SearchDomain).begin(), itItemEnd = (rstStruct.SearchDomain).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("SearchDomain", (*itItem));
  }

  for (std::list< ::IPAddress >::const_iterator itItem = (rstStruct.DNSManual).begin(), itItemEnd = (rstStruct.DNSManual).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("DNSManual");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDNS& rstStruct)
{
  rdoParam.GetChildValueByLocalName("FromDHCP", rstStruct.FromDHCP);
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "SearchDomain")
    {
      (rstStruct.SearchDomain).push_back(tdoItem.GetText());
    }
  }

  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "DNSManual")
    {
      (rstStruct.DNSManual).resize((rstStruct.DNSManual).size() + 1);
      tdoItem >> (rstStruct.DNSManual).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDNSResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDNSResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetNTP& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetNTP& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetNTPResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamNTPInformation = rdoParam.CreateChild("NTPInformation");
  tdoParamNTPInformation << rstStruct.NTPInformation;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetNTPResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("NTPInformation") >> rstStruct.NTPInformation;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetNTP& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("FromDHCP", rstStruct.FromDHCP);
  for (std::list< ::NetworkHost >::const_iterator itItem = (rstStruct.NTPManual).begin(), itItemEnd = (rstStruct.NTPManual).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("NTPManual");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetNTP& rstStruct)
{
  rdoParam.GetChildValueByLocalName("FromDHCP", rstStruct.FromDHCP);
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "NTPManual")
    {
      (rstStruct.NTPManual).resize((rstStruct.NTPManual).size() + 1);
      tdoItem >> (rstStruct.NTPManual).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetNTPResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetNTPResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDynamicDNS& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDynamicDNS& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDynamicDNSResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamDynamicDNSInformation = rdoParam.CreateChild("DynamicDNSInformation");
  tdoParamDynamicDNSInformation << rstStruct.DynamicDNSInformation;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDynamicDNSResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("DynamicDNSInformation") >> rstStruct.DynamicDNSInformation;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDynamicDNS& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamType = rdoParam.CreateChild("Type");
  tdoParamType << rstStruct.Type;
  if (!(rstStruct.Name).IsNull()) // Optional
  {
    staff::DataObject tdoParamName = rdoParam.CreateChild("Name");
    SerializeTypedef_DNSName(tdoParamName, *rstStruct.Name);
  }
  if (!(rstStruct.TTL).IsNull()) // Optional
  {
    rdoParam.CreateChild("TTL", *rstStruct.TTL);
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDynamicDNS& rstStruct)
{
  rdoParam.GetChildByLocalName("Type") >> rstStruct.Type;
  const staff::DataObject& rdoParamName = rdoParam.GetChildByLocalNameOpt("Name");
  if (!rdoParamName.IsNull()) // optional
  {
    DeserializeTypedef_DNSName(rdoParamName, *rstStruct.Name);
  }
  const staff::DataObject& rdoParamTTL = rdoParam.GetChildByLocalNameOpt("TTL");
  if (!rdoParamTTL.IsNull()) // optional
  {
    rdoParamTTL.GetValue(*rstStruct.TTL);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDynamicDNSResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDynamicDNSResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetNetworkInterfaces& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetNetworkInterfaces& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetNetworkInterfacesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::NetworkInterface >::const_iterator itItem = (rstStruct.NetworkInterfaces).begin(), itItemEnd = (rstStruct.NetworkInterfaces).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("NetworkInterfaces");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetNetworkInterfacesResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "NetworkInterfaces")
    {
      (rstStruct.NetworkInterfaces).resize((rstStruct.NetworkInterfaces).size() + 1);
      tdoItem >> (rstStruct.NetworkInterfaces).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetNetworkInterfaces& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamInterfaceToken = rdoParam.CreateChild("InterfaceToken");
  SerializeTypedef_ReferenceToken(tdoParamInterfaceToken, rstStruct.InterfaceToken);
  staff::DataObject tdoParamNetworkInterface = rdoParam.CreateChild("NetworkInterface");
  tdoParamNetworkInterface << rstStruct.NetworkInterface;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetNetworkInterfaces& rstStruct)
{
  DeserializeTypedef_ReferenceToken(rdoParam.GetChildByLocalName("InterfaceToken"), rstStruct.InterfaceToken);
  rdoParam.GetChildByLocalName("NetworkInterface") >> rstStruct.NetworkInterface;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetNetworkInterfacesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("RebootNeeded", rstStruct.RebootNeeded);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetNetworkInterfacesResponse& rstStruct)
{
  rdoParam.GetChildValueByLocalName("RebootNeeded", rstStruct.RebootNeeded);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetNetworkProtocols& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetNetworkProtocols& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetNetworkProtocolsResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::NetworkProtocol >::const_iterator itItem = (rstStruct.NetworkProtocols).begin(), itItemEnd = (rstStruct.NetworkProtocols).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("NetworkProtocols");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetNetworkProtocolsResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "NetworkProtocols")
    {
      (rstStruct.NetworkProtocols).resize((rstStruct.NetworkProtocols).size() + 1);
      tdoItem >> (rstStruct.NetworkProtocols).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetNetworkProtocols& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::NetworkProtocol >::const_iterator itItem = (rstStruct.NetworkProtocols).begin(), itItemEnd = (rstStruct.NetworkProtocols).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("NetworkProtocols");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetNetworkProtocols& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "NetworkProtocols")
    {
      (rstStruct.NetworkProtocols).resize((rstStruct.NetworkProtocols).size() + 1);
      tdoItem >> (rstStruct.NetworkProtocols).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetNetworkProtocolsResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetNetworkProtocolsResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetNetworkDefaultGateway& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetNetworkDefaultGateway& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetNetworkDefaultGatewayResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamNetworkGateway = rdoParam.CreateChild("NetworkGateway");
  tdoParamNetworkGateway << rstStruct.NetworkGateway;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetNetworkDefaultGatewayResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("NetworkGateway") >> rstStruct.NetworkGateway;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetNetworkDefaultGateway& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::IPv4Address >::const_iterator itItem = (rstStruct.IPv4Address).begin(), itItemEnd = (rstStruct.IPv4Address).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("IPv4Address");
    SerializeTypedef_IPv4Address(tdoParamItem, (*itItem));
  }

  for (std::list< ::IPv6Address >::const_iterator itItem = (rstStruct.IPv6Address).begin(), itItemEnd = (rstStruct.IPv6Address).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("IPv6Address");
    SerializeTypedef_IPv6Address(tdoParamItem, (*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetNetworkDefaultGateway& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "IPv4Address")
    {
      (rstStruct.IPv4Address).resize((rstStruct.IPv4Address).size() + 1);
      DeserializeTypedef_IPv4Address(tdoItem, (rstStruct.IPv4Address).back());
    }
  }

  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "IPv6Address")
    {
      (rstStruct.IPv6Address).resize((rstStruct.IPv6Address).size() + 1);
      DeserializeTypedef_IPv6Address(tdoItem, (rstStruct.IPv6Address).back());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetNetworkDefaultGatewayResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetNetworkDefaultGatewayResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetZeroConfiguration& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetZeroConfiguration& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetZeroConfigurationResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamZeroConfiguration = rdoParam.CreateChild("ZeroConfiguration");
  tdoParamZeroConfiguration << rstStruct.ZeroConfiguration;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetZeroConfigurationResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("ZeroConfiguration") >> rstStruct.ZeroConfiguration;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetZeroConfiguration& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamInterfaceToken = rdoParam.CreateChild("InterfaceToken");
  SerializeTypedef_ReferenceToken(tdoParamInterfaceToken, rstStruct.InterfaceToken);
  rdoParam.CreateChild("Enabled", rstStruct.Enabled);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetZeroConfiguration& rstStruct)
{
  DeserializeTypedef_ReferenceToken(rdoParam.GetChildByLocalName("InterfaceToken"), rstStruct.InterfaceToken);
  rdoParam.GetChildValueByLocalName("Enabled", rstStruct.Enabled);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetZeroConfigurationResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetZeroConfigurationResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetIPAddressFilter& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetIPAddressFilter& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetIPAddressFilterResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamIPAddressFilter = rdoParam.CreateChild("IPAddressFilter");
  tdoParamIPAddressFilter << rstStruct.IPAddressFilter;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetIPAddressFilterResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("IPAddressFilter") >> rstStruct.IPAddressFilter;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetIPAddressFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamIPAddressFilter = rdoParam.CreateChild("IPAddressFilter");
  tdoParamIPAddressFilter << rstStruct.IPAddressFilter;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetIPAddressFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("IPAddressFilter") >> rstStruct.IPAddressFilter;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetIPAddressFilterResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetIPAddressFilterResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::AddIPAddressFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamIPAddressFilter = rdoParam.CreateChild("IPAddressFilter");
  tdoParamIPAddressFilter << rstStruct.IPAddressFilter;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::AddIPAddressFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("IPAddressFilter") >> rstStruct.IPAddressFilter;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::AddIPAddressFilterResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::AddIPAddressFilterResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::RemoveIPAddressFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamIPAddressFilter = rdoParam.CreateChild("IPAddressFilter");
  tdoParamIPAddressFilter << rstStruct.IPAddressFilter;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::RemoveIPAddressFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("IPAddressFilter") >> rstStruct.IPAddressFilter;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::RemoveIPAddressFilterResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::RemoveIPAddressFilterResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetAccessPolicy& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetAccessPolicy& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetAccessPolicyResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamPolicyFile = rdoParam.CreateChild("PolicyFile");
  tdoParamPolicyFile << rstStruct.PolicyFile;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetAccessPolicyResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("PolicyFile") >> rstStruct.PolicyFile;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetAccessPolicy& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamPolicyFile = rdoParam.CreateChild("PolicyFile");
  tdoParamPolicyFile << rstStruct.PolicyFile;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetAccessPolicy& rstStruct)
{
  rdoParam.GetChildByLocalName("PolicyFile") >> rstStruct.PolicyFile;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetAccessPolicyResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetAccessPolicyResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::CreateCertificate& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  if (!(rstStruct.CertificateID).IsNull()) // Optional
  {
    rdoParam.CreateChild("CertificateID", *rstStruct.CertificateID);
  }
  if (!(rstStruct.Subject).IsNull()) // Optional
  {
    rdoParam.CreateChild("Subject", *rstStruct.Subject);
  }
  if (!(rstStruct.ValidNotBefore).IsNull()) // Optional
  {
    rdoParam.CreateChild("ValidNotBefore", *rstStruct.ValidNotBefore);
  }
  if (!(rstStruct.ValidNotAfter).IsNull()) // Optional
  {
    rdoParam.CreateChild("ValidNotAfter", *rstStruct.ValidNotAfter);
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::CreateCertificate& rstStruct)
{
  const staff::DataObject& rdoParamCertificateID = rdoParam.GetChildByLocalNameOpt("CertificateID");
  if (!rdoParamCertificateID.IsNull()) // optional
  {
    rdoParamCertificateID.GetValue(*rstStruct.CertificateID);
  }
  const staff::DataObject& rdoParamSubject = rdoParam.GetChildByLocalNameOpt("Subject");
  if (!rdoParamSubject.IsNull()) // optional
  {
    rdoParamSubject.GetValue(*rstStruct.Subject);
  }
  const staff::DataObject& rdoParamValidNotBefore = rdoParam.GetChildByLocalNameOpt("ValidNotBefore");
  if (!rdoParamValidNotBefore.IsNull()) // optional
  {
    rdoParamValidNotBefore.GetValue(*rstStruct.ValidNotBefore);
  }
  const staff::DataObject& rdoParamValidNotAfter = rdoParam.GetChildByLocalNameOpt("ValidNotAfter");
  if (!rdoParamValidNotAfter.IsNull()) // optional
  {
    rdoParamValidNotAfter.GetValue(*rstStruct.ValidNotAfter);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::CreateCertificateResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamNvtCertificate = rdoParam.CreateChild("NvtCertificate");
  tdoParamNvtCertificate << rstStruct.NvtCertificate;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::CreateCertificateResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("NvtCertificate") >> rstStruct.NvtCertificate;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCertificates& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCertificates& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCertificatesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::Certificate >::const_iterator itItem = (rstStruct.NvtCertificate).begin(), itItemEnd = (rstStruct.NvtCertificate).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("NvtCertificate");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCertificatesResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "NvtCertificate")
    {
      (rstStruct.NvtCertificate).resize((rstStruct.NvtCertificate).size() + 1);
      tdoItem >> (rstStruct.NvtCertificate).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCertificatesStatus& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCertificatesStatus& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCertificatesStatusResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::CertificateStatus >::const_iterator itItem = (rstStruct.CertificateStatus).begin(), itItemEnd = (rstStruct.CertificateStatus).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("CertificateStatus");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCertificatesStatusResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "CertificateStatus")
    {
      (rstStruct.CertificateStatus).resize((rstStruct.CertificateStatus).size() + 1);
      tdoItem >> (rstStruct.CertificateStatus).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetCertificatesStatus& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::CertificateStatus >::const_iterator itItem = (rstStruct.CertificateStatus).begin(), itItemEnd = (rstStruct.CertificateStatus).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("CertificateStatus");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetCertificatesStatus& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "CertificateStatus")
    {
      (rstStruct.CertificateStatus).resize((rstStruct.CertificateStatus).size() + 1);
      tdoItem >> (rstStruct.CertificateStatus).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetCertificatesStatusResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetCertificatesStatusResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::DeleteCertificates& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list<staff::token>::const_iterator itItem = (rstStruct.CertificateID).begin(), itItemEnd = (rstStruct.CertificateID).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("CertificateID", (*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::DeleteCertificates& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "CertificateID")
    {
      (rstStruct.CertificateID).push_back(tdoItem.GetText());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::DeleteCertificatesResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::DeleteCertificatesResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetPkcs10Request& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("CertificateID", rstStruct.CertificateID);
  if (!(rstStruct.Subject).IsNull()) // Optional
  {
    rdoParam.CreateChild("Subject", *rstStruct.Subject);
  }
  if (!(rstStruct.Attributes).IsNull()) // Optional
  {
    staff::DataObject tdoParamAttributes = rdoParam.CreateChild("Attributes");
    tdoParamAttributes << *rstStruct.Attributes;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetPkcs10Request& rstStruct)
{
  rdoParam.GetChildValueByLocalName("CertificateID", rstStruct.CertificateID);
  const staff::DataObject& rdoParamSubject = rdoParam.GetChildByLocalNameOpt("Subject");
  if (!rdoParamSubject.IsNull()) // optional
  {
    rdoParamSubject.GetValue(*rstStruct.Subject);
  }
  const staff::DataObject& rdoParamAttributes = rdoParam.GetChildByLocalNameOpt("Attributes");
  if (!rdoParamAttributes.IsNull()) // optional
  {
    rdoParamAttributes >> *rstStruct.Attributes;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetPkcs10RequestResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamPkcs10Request = rdoParam.CreateChild("Pkcs10Request");
  tdoParamPkcs10Request << rstStruct.Pkcs10Request;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetPkcs10RequestResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("Pkcs10Request") >> rstStruct.Pkcs10Request;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::LoadCertificates& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::Certificate >::const_iterator itItem = (rstStruct.NVTCertificate).begin(), itItemEnd = (rstStruct.NVTCertificate).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("NVTCertificate");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::LoadCertificates& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "NVTCertificate")
    {
      (rstStruct.NVTCertificate).resize((rstStruct.NVTCertificate).size() + 1);
      tdoItem >> (rstStruct.NVTCertificate).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::LoadCertificatesResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::LoadCertificatesResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetClientCertificateMode& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetClientCertificateMode& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetClientCertificateModeResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("Enabled", rstStruct.Enabled);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetClientCertificateModeResponse& rstStruct)
{
  rdoParam.GetChildValueByLocalName("Enabled", rstStruct.Enabled);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetClientCertificateMode& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("Enabled", rstStruct.Enabled);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetClientCertificateMode& rstStruct)
{
  rdoParam.GetChildValueByLocalName("Enabled", rstStruct.Enabled);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetClientCertificateModeResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetClientCertificateModeResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCACertificates& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCACertificates& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCACertificatesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::Certificate >::const_iterator itItem = (rstStruct.CACertificate).begin(), itItemEnd = (rstStruct.CACertificate).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("CACertificate");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCACertificatesResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "CACertificate")
    {
      (rstStruct.CACertificate).resize((rstStruct.CACertificate).size() + 1);
      tdoItem >> (rstStruct.CACertificate).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::LoadCertificateWithPrivateKey& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::CertificateWithPrivateKey >::const_iterator itItem = (rstStruct.CertificateWithPrivateKey).begin(), itItemEnd = (rstStruct.CertificateWithPrivateKey).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("CertificateWithPrivateKey");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::LoadCertificateWithPrivateKey& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "CertificateWithPrivateKey")
    {
      (rstStruct.CertificateWithPrivateKey).resize((rstStruct.CertificateWithPrivateKey).size() + 1);
      tdoItem >> (rstStruct.CertificateWithPrivateKey).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::LoadCertificateWithPrivateKeyResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::LoadCertificateWithPrivateKeyResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCertificateInformation& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("CertificateID", rstStruct.CertificateID);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCertificateInformation& rstStruct)
{
  rdoParam.GetChildValueByLocalName("CertificateID", rstStruct.CertificateID);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetCertificateInformationResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamCertificateInformation = rdoParam.CreateChild("CertificateInformation");
  tdoParamCertificateInformation << rstStruct.CertificateInformation;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetCertificateInformationResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("CertificateInformation") >> rstStruct.CertificateInformation;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::LoadCACertificates& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::Certificate >::const_iterator itItem = (rstStruct.CACertificate).begin(), itItemEnd = (rstStruct.CACertificate).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("CACertificate");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::LoadCACertificates& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "CACertificate")
    {
      (rstStruct.CACertificate).resize((rstStruct.CACertificate).size() + 1);
      tdoItem >> (rstStruct.CACertificate).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::LoadCACertificatesResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::LoadCACertificatesResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::CreateDot1XConfiguration& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamDot1XConfiguration = rdoParam.CreateChild("Dot1XConfiguration");
  tdoParamDot1XConfiguration << rstStruct.Dot1XConfiguration;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::CreateDot1XConfiguration& rstStruct)
{
  rdoParam.GetChildByLocalName("Dot1XConfiguration") >> rstStruct.Dot1XConfiguration;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::CreateDot1XConfigurationResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::CreateDot1XConfigurationResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDot1XConfiguration& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamDot1XConfiguration = rdoParam.CreateChild("Dot1XConfiguration");
  tdoParamDot1XConfiguration << rstStruct.Dot1XConfiguration;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDot1XConfiguration& rstStruct)
{
  rdoParam.GetChildByLocalName("Dot1XConfiguration") >> rstStruct.Dot1XConfiguration;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetDot1XConfigurationResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetDot1XConfigurationResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDot1XConfiguration& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamDot1XConfigurationToken = rdoParam.CreateChild("Dot1XConfigurationToken");
  SerializeTypedef_ReferenceToken(tdoParamDot1XConfigurationToken, rstStruct.Dot1XConfigurationToken);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDot1XConfiguration& rstStruct)
{
  DeserializeTypedef_ReferenceToken(rdoParam.GetChildByLocalName("Dot1XConfigurationToken"), rstStruct.Dot1XConfigurationToken);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDot1XConfigurationResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamDot1XConfiguration = rdoParam.CreateChild("Dot1XConfiguration");
  tdoParamDot1XConfiguration << rstStruct.Dot1XConfiguration;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDot1XConfigurationResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("Dot1XConfiguration") >> rstStruct.Dot1XConfiguration;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDot1XConfigurations& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDot1XConfigurations& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDot1XConfigurationsResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::Dot1XConfiguration >::const_iterator itItem = (rstStruct.Dot1XConfiguration).begin(), itItemEnd = (rstStruct.Dot1XConfiguration).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("Dot1XConfiguration");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDot1XConfigurationsResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "Dot1XConfiguration")
    {
      (rstStruct.Dot1XConfiguration).resize((rstStruct.Dot1XConfiguration).size() + 1);
      tdoItem >> (rstStruct.Dot1XConfiguration).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::DeleteDot1XConfiguration& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::ReferenceToken >::const_iterator itItem = (rstStruct.Dot1XConfigurationToken).begin(), itItemEnd = (rstStruct.Dot1XConfigurationToken).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("Dot1XConfigurationToken");
    SerializeTypedef_ReferenceToken(tdoParamItem, (*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::DeleteDot1XConfiguration& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "Dot1XConfigurationToken")
    {
      (rstStruct.Dot1XConfigurationToken).resize((rstStruct.Dot1XConfigurationToken).size() + 1);
      DeserializeTypedef_ReferenceToken(tdoItem, (rstStruct.Dot1XConfigurationToken).back());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::DeleteDot1XConfigurationResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::DeleteDot1XConfigurationResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetRelayOutputs& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetRelayOutputs& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetRelayOutputsResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::RelayOutput >::const_iterator itItem = (rstStruct.RelayOutputs).begin(), itItemEnd = (rstStruct.RelayOutputs).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("RelayOutputs");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetRelayOutputsResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "RelayOutputs")
    {
      (rstStruct.RelayOutputs).resize((rstStruct.RelayOutputs).size() + 1);
      tdoItem >> (rstStruct.RelayOutputs).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetRelayOutputSettings& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamRelayOutputToken = rdoParam.CreateChild("RelayOutputToken");
  SerializeTypedef_ReferenceToken(tdoParamRelayOutputToken, rstStruct.RelayOutputToken);
  staff::DataObject tdoParamProperties = rdoParam.CreateChild("Properties");
  tdoParamProperties << rstStruct.Properties;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetRelayOutputSettings& rstStruct)
{
  DeserializeTypedef_ReferenceToken(rdoParam.GetChildByLocalName("RelayOutputToken"), rstStruct.RelayOutputToken);
  rdoParam.GetChildByLocalName("Properties") >> rstStruct.Properties;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetRelayOutputSettingsResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetRelayOutputSettingsResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetRelayOutputState& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamRelayOutputToken = rdoParam.CreateChild("RelayOutputToken");
  SerializeTypedef_ReferenceToken(tdoParamRelayOutputToken, rstStruct.RelayOutputToken);
  staff::DataObject tdoParamLogicalState = rdoParam.CreateChild("LogicalState");
  tdoParamLogicalState << rstStruct.LogicalState;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetRelayOutputState& rstStruct)
{
  DeserializeTypedef_ReferenceToken(rdoParam.GetChildByLocalName("RelayOutputToken"), rstStruct.RelayOutputToken);
  rdoParam.GetChildByLocalName("LogicalState") >> rstStruct.LogicalState;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SetRelayOutputStateResponse& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SetRelayOutputStateResponse& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SendAuxiliaryCommand& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamAuxiliaryCommand = rdoParam.CreateChild("AuxiliaryCommand");
  SerializeTypedef_AuxiliaryData(tdoParamAuxiliaryCommand, rstStruct.AuxiliaryCommand);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SendAuxiliaryCommand& rstStruct)
{
  DeserializeTypedef_AuxiliaryData(rdoParam.GetChildByLocalName("AuxiliaryCommand"), rstStruct.AuxiliaryCommand);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::SendAuxiliaryCommandResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  if (!(rstStruct.AuxiliaryCommandResponse).IsNull()) // Optional
  {
    staff::DataObject tdoParamAuxiliaryCommandResponse = rdoParam.CreateChild("AuxiliaryCommandResponse");
    SerializeTypedef_AuxiliaryData(tdoParamAuxiliaryCommandResponse, *rstStruct.AuxiliaryCommandResponse);
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::SendAuxiliaryCommandResponse& rstStruct)
{
  const staff::DataObject& rdoParamAuxiliaryCommandResponse = rdoParam.GetChildByLocalNameOpt("AuxiliaryCommandResponse");
  if (!rdoParamAuxiliaryCommandResponse.IsNull()) // optional
  {
    DeserializeTypedef_AuxiliaryData(rdoParamAuxiliaryCommandResponse, *rstStruct.AuxiliaryCommandResponse);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDot11Capabilities& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list<staff::DataObject>::const_iterator itItem = (rstStruct.tUnnamed0).begin(), itItemEnd = (rstStruct.tUnnamed0).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("tUnnamed0").AppendChild((*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDot11Capabilities& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "tUnnamed0")
    {
      (rstStruct.tUnnamed0).push_back(tdoItem.FirstChild());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDot11CapabilitiesResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamCapabilities = rdoParam.CreateChild("Capabilities");
  tdoParamCapabilities << rstStruct.Capabilities;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDot11CapabilitiesResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("Capabilities") >> rstStruct.Capabilities;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDot11Status& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamInterfaceToken = rdoParam.CreateChild("InterfaceToken");
  SerializeTypedef_ReferenceToken(tdoParamInterfaceToken, rstStruct.InterfaceToken);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDot11Status& rstStruct)
{
  DeserializeTypedef_ReferenceToken(rdoParam.GetChildByLocalName("InterfaceToken"), rstStruct.InterfaceToken);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetDot11StatusResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamStatus = rdoParam.CreateChild("Status");
  tdoParamStatus << rstStruct.Status;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetDot11StatusResponse& rstStruct)
{
  rdoParam.GetChildByLocalName("Status") >> rstStruct.Status;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ScanAvailableDot11Networks& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  staff::DataObject tdoParamInterfaceToken = rdoParam.CreateChild("InterfaceToken");
  SerializeTypedef_ReferenceToken(tdoParamInterfaceToken, rstStruct.InterfaceToken);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ScanAvailableDot11Networks& rstStruct)
{
  DeserializeTypedef_ReferenceToken(rdoParam.GetChildByLocalName("InterfaceToken"), rstStruct.InterfaceToken);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ScanAvailableDot11NetworksResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list< ::Dot11AvailableNetworks >::const_iterator itItem = (rstStruct.Networks).begin(), itItemEnd = (rstStruct.Networks).end();
       itItem != itItemEnd; ++itItem)
  {
    staff::DataObject tdoParamItem = rdoParam.CreateChild("Networks");
    tdoParamItem << (*itItem);
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ScanAvailableDot11NetworksResponse& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "Networks")
    {
      (rstStruct.Networks).resize((rstStruct.Networks).size() + 1);
      tdoItem >> (rstStruct.Networks).back();
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemUris& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemUris& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemUrisResponse::Extension& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  for (std::list<staff::DataObject>::const_iterator itItem = (rstStruct.tUnnamed0).begin(), itItemEnd = (rstStruct.tUnnamed0).end();
       itItem != itItemEnd; ++itItem)
  {
    rdoParam.CreateChild("tUnnamed0").AppendChild((*itItem));
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemUrisResponse::Extension& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "tUnnamed0")
    {
      (rstStruct.tUnnamed0).push_back(tdoItem.FirstChild());
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::GetSystemUrisResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  if (!(rstStruct.SystemLogUris).IsNull()) // Optional
  {
    staff::DataObject tdoParamSystemLogUris = rdoParam.CreateChild("SystemLogUris");
    tdoParamSystemLogUris << *rstStruct.SystemLogUris;
  }
  if (!(rstStruct.SupportInfoUri).IsNull()) // Optional
  {
    rdoParam.CreateChild("SupportInfoUri", *rstStruct.SupportInfoUri);
  }
  if (!(rstStruct.SystemBackupUri).IsNull()) // Optional
  {
    rdoParam.CreateChild("SystemBackupUri", *rstStruct.SystemBackupUri);
  }
  if (!(rstStruct.Extension).IsNull()) // Optional
  {
    staff::DataObject tdoParamExtension = rdoParam.CreateChild("Extension");
    tdoParamExtension << *rstStruct.Extension;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::GetSystemUrisResponse& rstStruct)
{
  const staff::DataObject& rdoParamSystemLogUris = rdoParam.GetChildByLocalNameOpt("SystemLogUris");
  if (!rdoParamSystemLogUris.IsNull()) // optional
  {
    rdoParamSystemLogUris >> *rstStruct.SystemLogUris;
  }
  const staff::DataObject& rdoParamSupportInfoUri = rdoParam.GetChildByLocalNameOpt("SupportInfoUri");
  if (!rdoParamSupportInfoUri.IsNull()) // optional
  {
    rdoParamSupportInfoUri.GetValue(*rstStruct.SupportInfoUri);
  }
  const staff::DataObject& rdoParamSystemBackupUri = rdoParam.GetChildByLocalNameOpt("SystemBackupUri");
  if (!rdoParamSystemBackupUri.IsNull()) // optional
  {
    rdoParamSystemBackupUri.GetValue(*rstStruct.SystemBackupUri);
  }
  const staff::DataObject& rdoParamExtension = rdoParam.GetChildByLocalNameOpt("Extension");
  if (!rdoParamExtension.IsNull()) // optional
  {
    rdoParamExtension >> *rstStruct.Extension;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::StartFirmwareUpgrade& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::StartFirmwareUpgrade& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::StartFirmwareUpgradeResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("UploadUri", rstStruct.UploadUri);
  rdoParam.CreateChild("UploadDelay", rstStruct.UploadDelay);
  rdoParam.CreateChild("ExpectedDownTime", rstStruct.ExpectedDownTime);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::StartFirmwareUpgradeResponse& rstStruct)
{
  rdoParam.GetChildValueByLocalName("UploadUri", rstStruct.UploadUri);
  rdoParam.GetChildValueByLocalName("UploadDelay", rstStruct.UploadDelay);
  rdoParam.GetChildValueByLocalName("ExpectedDownTime", rstStruct.ExpectedDownTime);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::StartSystemRestore& /*rstStruct*/)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::StartSystemRestore& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::StartSystemRestoreResponse& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  rdoParam.CreateChild("UploadUri", rstStruct.UploadUri);
  rdoParam.CreateChild("ExpectedDownTime", rstStruct.ExpectedDownTime);
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::StartSystemRestoreResponse& rstStruct)
{
  rdoParam.GetChildValueByLocalName("UploadUri", rstStruct.UploadUri);
  rdoParam.GetChildValueByLocalName("ExpectedDownTime", rstStruct.ExpectedDownTime);
  return rdoParam;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
// typedef serializators

DataObject& SerializeTypedef_EAPMethodTypes(DataObject& rdoParam, const ::EAPMethodTypes& rtType)
{
  rdoParam.SetValue(rtType);
  rdoParam.SetNamespaceUriGenPrefix("http://www.onvif.org/ver10/device/wsdl", true);
  rdoParam.SetElementFormDefaultQualified(true);
  return rdoParam;
}


///////////////////////////////////////////////////////////////////////////////////////////////////////
// typedef deserializators
const DataObject& DeserializeTypedef_EAPMethodTypes(const DataObject& rdoParam, ::EAPMethodTypes& rtType)
{
  rdoParam.GetValue(rtType);
  return rdoParam;
}

}


